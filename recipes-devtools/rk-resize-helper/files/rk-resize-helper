#!/bin/bash -e
# Copyright (c) Fathi Boudra <fathi.boudra@linaro.org>
# Copyright (c) 2023 Vicharak Computers LLP
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

check_root() {
	# Check if the script is running as root
	if [ "$(whoami)" != "root" ]; then
		echo "ERROR: You must be root"
		exit 1
	fi
}

check_dependencies() {
	# Check for required tools and assign variables
	SGDISK=$(command -v sgdisk)
	PARTED=$(command -v parted)
	PARTPROBE=$(command -v partprobe)
	RESIZE2FS=$(command -v resize2fs)

	if [ -z "$SGDISK" ]; then
		echo "ERROR: You must have sgdisk"
		exit 1
	fi

	if [ -z "$PARTED" ]; then
		echo "ERROR: You must have parted"
		exit 1
	fi

	if [ -z "$PARTPROBE" ]; then
		echo "ERROR: You must have partprobe"
		exit 1
	fi

	if [ -z "$RESIZE2FS" ]; then
		echo "ERROR: You must have resize2fs"
		exit 1
	fi
}

rk_resize_helper() {
	check_root

	check_dependencies

	# Find root device
	ROOT_DEVICE=$(findmnt --noheadings --output=SOURCE / | cut -d'[' -f1)
	# Prune root device (for example UUID)
	ROOT_DEVICE=$(realpath "${ROOT_DEVICE}")
	# Get the partition number and type
	PART_ENTRY_NUMBER=$(udevadm info --query=property --name="${ROOT_DEVICE}" | grep '^ID_PART_ENTRY_NUMBER=' | cut -d'=' -f2)
	PART_TABLE_TYPE=$(udevadm info --query=property --name="${ROOT_DEVICE}" | grep '^ID_PART_TABLE_TYPE=' | cut -d'=' -f2)
	# Find the block device
	DEVICE=$(udevadm info --query=path --name="${ROOT_DEVICE}" | awk -F'/' '{print $(NF-1)}')
	DEVICE="/dev/${DEVICE}"

	if [ "$PART_TABLE_TYPE" = "gpt" ]; then
		"${SGDISK}" -e "${DEVICE}"
		"${PARTPROBE}"
	fi

	"${PARTED}" "${DEVICE}" resizepart "${PART_ENTRY_NUMBER}" 100%
	"${PARTPROBE}"
	"${RESIZE2FS}" "${ROOT_DEVICE}"
}

case "$1" in
start)
	if [ ! -e /var/lib/misc/firstrun ]; then
		rk_resize_helper
		mkdir -p /var/lib/misc
		touch /var/lib/misc/firstrun
	fi
	;;
stop) ;;
restart | reload) ;;
*)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
	;;
esac

exit $?
